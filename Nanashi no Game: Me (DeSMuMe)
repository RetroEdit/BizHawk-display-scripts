player = {x = 0x21347FC, y = 0x2134804, camx = 0x2134820, camy = 0x2134822} --camx in terms of upright view; same for camy. so camx looks up/down
regret1 = {x = 0x2133828, y = 0x2133830, angle = 0x213384C}
regret2 = {x = 0x2133AD8, y = 0x2133AE0, angle = 0x2133AFC}
regret3= {x = 0x2133D88, y = 0x2133D90, angle = 0x2133DAC}
regret4= {x = 0x2134038, y = 0x2134040, angle = 0x213405C}
--the following when moving forward
--camy = 12.000 x decreases
--camy = 4.000 x increases; 0 degrees?
--camy = 8.000 y decreases
--camy = 0.000 y increases (this is same as 16); so this means 270 degrees

 --Declarations here
--[[
 GetStats by FatRatKnight
 http://tasvideos.org/forum/viewtopic.php?p=458672#458672
 ]]--
  local function GetStats(addr,o)
    o= o or {} --Construct a table if we didn't get one
    o.X = memory.readlongsigned(addr)/4096.0
    o.Y = memory.readlongsigned(addr+0x8)/4096.0
    o.Angle = memory.readlongsigned(addr+0x24)/4096.0
    --... And so on
    return o
end

function to_Radian(cam)
  local short = 65535/4096.0  --short to 20.12 format
  local radian = short/math.rad(360)  --Divide this to convert to radians
  return (cam/radian)-math.rad(90)  --Apparently to make "0" point up
end

 function display()
  local centerx = 127
  local centery = 96
  local Enemy = {}
  local playerx = memory.readlongsigned(player.x)/4096.0
  local playery = memory.readlongsigned(player.y)/4096.0
  local playercamx = memory.readshort(player.camx)/4096.0
  local playercamy = memory.readshort(player.camy)/4096.0
  for i= 1, 3 do
    Enemy[i] = GetStats(regret1.x + (i-1)*0x2B0)  --i-1 for 1 offset array with 0 offset addresses. Horrifying, I know.
    --if 
  end
  local regret_difx
  local regret_dify
  local directionx = 20*math.cos(to_Radian(playercamy))+centerx
  local directiony = 20*math.sin(to_Radian(playercamy))+centery
  --For reference
  gui.drawtext(0,0,"Player: ("..string.format('%.6f',playerx)..","..string.format('%.6f',playery)..")")
  gui.drawtext(0,10,"Camera: ("..string.format('%.6f',playercamx)..","..string.format('%.6f',playercamy)..")")
  gui.drawtext(0,20,"Regret 1: ("..string.format('%.6f',Enemy[1].X)..","..string.format('%.6f',Enemy[1].Y)..")"..string.format('%.6f',Enemy[1].Angle))
  gui.drawtext(0,30,"Regret 2: ("..string.format('%.6f',Enemy[2].X)..","..string.format('%.6f',Enemy[2].Y)..")"..string.format('%.6f',Enemy[2].Angle))
  gui.drawtext(0,40,"Regret 3: ("..string.format('%.6f',Enemy[3].X)..","..string.format('%.6f',Enemy[3].Y)..")"..string.format('%.6f',Enemy[3].Angle))
  gui.line(centerx-5,centery-5,centerx+5,centery+5,"white")
  gui.line(centerx-5,centery+5,centerx+5,centery-5,"white")
  gui.line(centerx,centery,directionx,directiony,"white") --My direction
  --Display location of regrets relative to you, at the center
  for i = 1, 3 do
    regret_difx = math.abs(playerx-Enemy[i].X)
    regret_dify = math.abs(playery-Enemy[i].Y)
    if playerx < Enemy[i].X then  --Enemy is to the right of player
      regret_difx = centerx + regret_difx
      --gui.drawtext(0,100,"PX <R>= R")
    end
    if playery < Enemy[i].Y then  --Enemy is "above" player (lower y == higher up in screen)
      regret_dify = centery - regret_dify
      --gui.drawtext(0,110,"PY <R>= R")
    end
    regret_dirx = 20*math.cos(to_Radian(Enemy[i].Angle)) + regret_difx
    regret_diry = 20*math.sin(to_Radian(Enemy[i].Angle)) + regret_dify
    gui.drawtext(math.floor(regret_difx),math.floor(regret_dify),"R"..i)
    gui.line(regret_difx,regret_dify,regret_dirx,regret_diry,"white")
  end
 end
  gui.register(display)
